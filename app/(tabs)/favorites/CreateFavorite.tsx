import React, { useContext, useState } from "react";
import { StyleSheet, View } from "react-native";
import { useRouter } from "expo-router";
import { ThemedButton } from "@/components/Themed";
import { FavoritesContext } from "@/hooks/FavoritesContext";
import { Favorite } from "@/hooks/useFavorites";
import EditFavoriteComponent from "@/components/EditFavoriteComponent";

export default function CreateFavoriteScreen() {
  const router = useRouter();
  const { addFavorite } = useContext(FavoritesContext);

  // State for new favorite details
  const [name, setName] = useState("");
  const [latitude, setLatitude] = useState(0);
  const [longitude, setLongitude] = useState(0);
  const [note, setNote] = useState("");
  const [photoUrls, setPhotoUrls] = useState<string[]>([]);

  // Construct a default favorite object
  const newFavorite: Favorite = {
    id: "", // Will be auto-generated by `addFavorite`
    name,
    location: { latitude, longitude },
    photos: photoUrls,
    note,
  };

  // Handle "Cancel" button press
  const handleCancel = () => {
    router.back();
  };

  // Handle "Create" button press
  const handleCreate = async () => {
    if (!name) {
      alert("Please enter a name for the favorite.");
      return;
    }
    if (!latitude && !longitude) {
      alert("Please select a location for the favorite.");
      return;
    }
    await addFavorite({
      name,
      location: { latitude, longitude },
      photos: photoUrls,
      note,
    });
    router.back();
  };

  return (
    <View style={styles.container}>
      {/* Reusing EditFavoriteComponent component for input */}
      <EditFavoriteComponent
        favorite={newFavorite}
        setName={setName}
        setLatitude={setLatitude}
        setLongitude={setLongitude}
        setNote={setNote}
        setPhotoUrls={setPhotoUrls}
      />

      {/* Bottom buttons */}
      <View style={styles.buttonContainer}>
        <ThemedButton title="Cancel" onPress={handleCancel} />
        <ThemedButton title="Create" onPress={handleCreate} />
      </View>
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    padding: 16,
  },
  buttonContainer: {
    flexDirection: "row",
    justifyContent: "space-between",
    marginTop: 16,
  },
  cancelButton: {
    backgroundColor: "#888",
    flex: 1,
    marginRight: 8,
  },
  createButton: {
    backgroundColor: "#4CAF50",
    flex: 1,
    marginLeft: 8,
  },
});
